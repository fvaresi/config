#+PROPERTY: header-args :exports code
#+PROPERTY: header-args :results output silent

#+EXPORT_EXCLUDE_TAGS: noexport crypt

* Private							      :crypt:
-----BEGIN PGP MESSAGE-----

hQIMA2nLYyNk+9h4AQ/9Gmeo/+/Y7eIQWYbRR1TwOSe7UjQyWKv2SXZVxYSB5gt6
dOqpHppeAd5TuhwRzA0GHDVmeZKf3gVQPGQnT7zgTrVJNhxUArcBpn3R1L9RCKYu
3K7K33XHhqn0r68wxTKMpuKenOdtqNop3Gs+Xl6fu+DWQvIi/2o/jB45xli4+Zym
p05ajQdweNolG+ILoyUSzzmYC+5KHHZQR4HJ9zTQSUTrEUkdvh5yHQLSutcQf6SB
M9gQC27D4kXrWm7HDnA4TEA+zqd8rCc1YsiboHrdwPMnQ9uClQuJ1yeF8V8bTYUg
ZLsY2JKG6QgsJ1JkonRmnrBMCQzehkA79HMyN5BrphSDH56Sy/MbXVQ47N/jCBSR
KZ0/o1hsB+U/Gg0OwZO+lXyUeI9H/2zMjzmPUPFWSokQn7icGcbBY/v8oLU6RPvT
xH9tpkGxgrzESs0nY46WNSJVlzxgHEDA0Jvq3bqYE/1Ima2ed6XR2dHCTQE/yeI/
xljuZhewZZA2F+bX7sVw7xL2fVCNYCkravVPio5/tLQ9iDZQJ7WLDlI4AMbYl3Ve
PyGw3Zx+bAfixn1s31Ik2jRJ+vkCFGDscErpnaSeCqz4VE1TPbGCHP962UtQ240b
zliflC/Jt1NEh8RL+fai7YSt9PZglI6WpQvTvZbjr2xkPBILVniPLZWEPc+wG8nS
qgHlAlegm+EBGTUp9gyMxVt1ITWHZuqp0SvuEe5c6wgfE0HlIbXxN5Nwfdp2S0CK
LZfQF3u4R1Wq44xmouKmyqbx3sEhB1m+DP6kd9GNUMsF1/KBh/VJ2FIRbMRQSXmI
4e1QkKvpoXgLlhEk7Fi2tQ2f3IjF/1xUSNc+Nxjh+VmaajHdKn1Lfom//04kCKeA
FgBm8ydRC5QwLy7FIry8TQzDLfuyJ7H+Dp+l
=LrAx
-----END PGP MESSAGE-----
* Emacs packages

  It seems marmalade repo is not required anymore for most packages, so I stick with melpa. Also added org repo to install org-plus-contrib.

  #+BEGIN_SRC emacs-lisp
  (require 'package)

  (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/"))
  (add-to-list 'package-archives '("org" . "http://orgmode.org/elpa/") t)
  #+END_SRC

  One problem of melpa repository is that it receives updates as soon as their published, so it's up to the maintainer to keep the package stable. The upside of this is that bugs are detected and fixed early. The downside is that you may have unexpected bugs.

  AFAIK, the only way to avoid this is to use [[http://stable.melpa.org][melpa stable]]. You can then pin some packages to this repo like this:

  #+BEGIN_SRC emacs-lisp
    (add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/packages/") t)

    ;; (add-to-list 'package-pinned-packages '(cider . "melpa-stable") t)
    ;; (add-to-list 'package-pinned-packages '(clj-refactor . "melpa-stable") t)
  #+END_SRC
  
  I keep a list of the packages I've installed so that a fresh install requires just to eval =gimme-my-packages=. Make sure you re-eval it after adding a package.

  #+BEGIN_SRC emacs-lisp
    (package-initialize)

    (defun gimme-my-packages ()
      (interactive)

      ;; consider using package-selected-packages
      (let ((required-packages '(ace-isearch
                                 ace-jump-mode

                                 ack-and-a-half

                                 android-mode

                                 browse-kill-ring

                                 conkeror-minor-mode

                                 clojure-mode
                                 clojure-snippets
                                 clojurescript-mode
                                 clj-refactor
                                 cider
                                 company
                                 slamhound
                                 4clojure

                                 company-emoji

                                 diff-hl

                                 easy-kill
                                 easy-kill-extras

                                 emmet-mode

                                 evil

                                 expand-region

                                 flycheck

                                 geben

                                 gh-md

                                 gnus-alias

                                 guide-key

                                 hydra

                                 helm
                                 helm-swoop
                                 helm-projectile

                                 interleave

                                 json-mode

                                 js2-mode
                                 js2-refactor
                                 ag
                                 xref-js2
                                 indium

                                 magit
                                 magit-svn

                                 multiple-cursors

                                 neotree

                                 notmuch

                                 org-plus-contrib
                                 org-download
                                 ob-http
                                 org-gcal
                                 org-jira
                                 org-beautify-theme
                                 htmlize
                                 ox-reveal
                                 orgtbl-aggregate
                                 google-contacts

                                 org-pomodoro

                                 paradox

                                 paredit

                                 php-mode
                                 php-auto-yasnippets
                                 php-refactor-mode

                                 popwin

                                 perspective
                                 projectile
                                 persp-projectile

                                 rainbow-delimiters

                                 restclient

                                 color-theme-sanityinc-tomorrow

                                 smart-mode-line
                                 smart-mode-line-powerline-theme

                                 smartparens

                                 smooth-scrolling

                                 solarized-theme

                                 string-edit
                                 string-inflection

                                 twittering-mode

                                 undo-tree

                                 web-beautify

                                 web-mode

                                 window-number
                                 )))

        (dolist (p required-packages)
        (when (not (package-installed-p p))
            (package-install p)))))
  #+END_SRC

  [[https://github.com/Malabarba/paradox/][Paradox]] is a great interface for package managing.

  #+BEGIN_SRC emacs-lisp
    (setq paradox-automatically-star t)
    (setq paradox-execute-asynchronously nil)
  #+END_SRC

  Just to be safe, backup current elpa dir when upgrading

  #+BEGIN_SRC emacs-lisp
    (defun fvaresi/upgrade-with-bkp ()
      (interactive)

      (let* ((src (expand-file-name "elpa" user-emacs-directory))
             (bkp-name (concat "elpa.bkp." (format-time-string "%Y%m%d")))
             (dest (expand-file-name bkp-name user-emacs-directory)))
        (progn (copy-directory src dest)
               (paradox-upgrade-packages))))
  #+END_SRC

